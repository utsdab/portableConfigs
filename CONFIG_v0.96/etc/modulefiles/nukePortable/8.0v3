#%Module
##
## @configure_input@
##
proc ModulesHelp { } {
        global version
        puts stderr "\tThis module configures Nuke."
        puts stderr "\n\tVersion $version\n"
}
set curMod [ module-info name]
module-whatis	"This is the base configuration for $curMod"

prereq "dab"
conflict "nuke/8.0v5"

switch [ module-info mode ] {
	"load"   { puts stderr ">>>>>> Loaded    $curMod" }
	"unload" { puts stderr "<<<<<< Unloading $curMod" }
	}
#######################################################

##########################  set in dab/central
set CONFIG_RENDER $env(CONFIG_RENDER)
set USER $env(USER)
##########################


############################ centralized scripts and plugs
append-path NUKE_PATH $CONFIG_RENDER/etc/nukeConfig
append-path PYTHONPATH $CONFIG_RENDER/etc/nukeConfig

###################################### 
set NUKE_VERSION 8.0v3
setenv NUKE_VERSION $NUKE_VERSION
set NUKE_INSTALL_PATH /Applications/Nuke$NUKE_VERSION
setenv NUKE_INSTALL_PATH $NUKE_INSTALL_PATH
append-path PATH $NUKE_INSTALL_PATH/Nuke$NUKE_VERSION.app/Contents/MacOS
append-path PATH $NUKE_INSTALL_PATH/NukeX$NUKE_VERSION.app/
set-alias nuke Nuke$NUKE_VERSION
set-alias nukex NukeX$NUKE_VERSION

######################################  set by user configs 
# set CONFIG $env(CONFIG)
# set STARTD $env(STARTD)
#append-path NUKE_PATH $CONFIG/nukeConfig
#append-path PYTHONPATH $CONFIG/nukeConfig
	
# for Tcl script use only
set     version      "@VERSION@"

